name: Tests

on:
  push:
    branches: [main, feature/*]
  pull_request:
    branches: [main]

jobs:
  test-node:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download required addons for testing
        run: |
          mkdir -p extraResources/addons
          # Download minimal addons needed for tests
          if [ "$RUNNER_OS" == "Linux" ]; then
            curl -L -f https://github.com/MaurUppi/whisper.cpp-openvino/releases/download/default-v20250806-141833/addon-linux-openvino.node \
              -o extraResources/addons/addon-linux-openvino.node || echo "OpenVINO addon download failed, using mocks"
          fi
          # Create addon manifest for tests
          cat > extraResources/addons/addon-manifest.json << EOF
          {
            "platform": "${{ runner.os }}",
            "arch": "x64",
            "openvinoVersion": "2024.6.0",
            "buildType": "test",
            "generatedAt": "$(date -u +%Y-%m-%dT%H:%M:%S.000Z)",
            "addons": {
              "primary": "addon-test.node"
            }
          }
          EOF
          ls -la extraResources/addons/

      - name: Audit dependencies for security vulnerabilities
        run: npm audit --audit-level moderate
        continue-on-error: true

      - name: Run linting and formatting check
        run: npm run format -- --check

      - name: Run type checking
        run: npx tsc --noEmit --project .

      - name: Run unit tests (Node.js)
        run: npm run test:ts -- --testPathIgnorePatterns="production|e2e|performance|functional|edge-cases|integration"

      - name: Run React component tests (jsdom)
        run: npm run test:tsx

      - name: Run distribution packaging tests
        run: npm run test:distribution

      - name: Verify build process
        run: npm run build
        env:
          NODE_ENV: production

      - name: Run production validation
        run: npm run test:production
        continue-on-error: true

      - name: Run all tests with coverage
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

      - name: Archive test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.node-version }}
          path: |
            coverage/
            test-results.xml
            **/*.log
          retention-days: 30

  test-openvino:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            openvino_version: '2024.6.0'
            kernel_version: '6.8+'
          - os: ubuntu-22.04
            openvino_version: '2024.6.0'
            kernel_version: '5.15+'
          - os: windows-2022
            openvino_version: '2024.6.0'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: npm ci

      - name: Run basic type checking
        run: npx tsc --noEmit --project .

      - name: Install OpenVINO toolkit (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          # Determine Ubuntu version for download URL
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            UBUNTU_VERSION="22"  # Use Ubuntu 22 package for latest
          elif [ "${{ matrix.os }}" = "ubuntu-22.04" ]; then
            UBUNTU_VERSION="22"
          else
            UBUNTU_VERSION="20"
          fi

          wget https://storage.openvinotoolkit.org/repositories/openvino/packages/2024.6/l_openvino_toolkit_ubuntu${UBUNTU_VERSION}_${{ matrix.openvino_version }}_x86_64.tgz
          tar -xzf l_openvino_toolkit_ubuntu*.tgz
          sudo mv l_openvino_toolkit_ubuntu*_x86_64 /opt/intel/openvino_${{ matrix.openvino_version }}
          echo "OPENVINO_INSTALL_DIR=/opt/intel/openvino_${{ matrix.openvino_version }}" >> $GITHUB_ENV

      - name: Install OpenVINO toolkit (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          Invoke-WebRequest -Uri "https://storage.openvinotoolkit.org/repositories/openvino/packages/2024.6/w_openvino_toolkit_windows_${{ matrix.openvino_version }}_x86_64.zip" -OutFile "openvino.zip"
          Expand-Archive -Path "openvino.zip" -DestinationPath "C:\temp\openvino"
          Move-Item "C:\temp\openvino\w_openvino_toolkit_windows*" "C:\intel\openvino_${{ matrix.openvino_version }}"
          echo "OPENVINO_INSTALL_DIR=C:\intel\openvino_${{ matrix.openvino_version }}" >> $env:GITHUB_ENV

      - name: Test OpenVINO integration
        run: npm run test:ts -- --testNamePattern="openvino|OpenVINO" --testPathIgnorePatterns="production|e2e|performance"

      - name: Validate GPU detection
        run: npm run test -- --testPathPattern="gpu"

      - name: Test AMD GPU CPU-only processing
        run: npm run test -- --testPathPattern="amd|AMD" --testNamePattern="cpu.*only"

      - name: Test CUDA version-specific addon selection
        run: npm run test -- --testPathPattern="cuda" --testNamePattern="version|1241|1220|1180"

      - name: Test fallback chain logic
        run: npm run test -- --testPathPattern="fallback" --testNamePattern="chain|fallback"

      - name: Test GPU selector enhancements
        run: npm run test:ts -- --testNamePattern="GPU.*[Ss]election|selector" --testPathIgnorePatterns="production|e2e|performance"
